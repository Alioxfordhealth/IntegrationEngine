<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet exclude-result-prefixes="xalan xsi myjava" version="1.0"
    xmlns:myjava="fr.enovacom.mappeur.library.xsl"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <!--This file has been generated by Enovacom Suite V2 Mapper v1.2.6-->
    <xsl:output encoding="UTF-8" indent="yes" method="xml"/>
    <xsl:template name="minuscules">
        <xsl:param name="string"/>
        <xsl:value-of select="myjava:StringTools.toLowerCase($string)"/>
    </xsl:template>
    <xsl:template name="majuscules">
        <xsl:param name="string"/>
        <xsl:value-of select="myjava:StringTools.toUpperCase($string)"/>
    </xsl:template>
    <xsl:variable name="var1_paramValue">
        <xsl:text><![CDATA[LAB001_]]></xsl:text>
    </xsl:variable>
    <xsl:param name="Prefix" select="$var1_paramValue"/>
    <xsl:template match="/root">
        <xsl:variable name="rootNode" select="."/>
        <xsl:element name="root">
            <xsl:element name="row">
                <xsl:for-each select="$rootNode/PID">
                    <xsl:variable name="var2_PID" select="."/>
                    <xsl:for-each select="PID.5.2">
                        <xsl:variable name="var3_PID.5.2" select="."/>
                        <xsl:variable name="var5_constante_value">
                            <xsl:text><![CDATA[1]]></xsl:text>
                        </xsl:variable>
                        <xsl:variable name="var6_constante_value">
                            <xsl:text><![CDATA[1]]></xsl:text>
                        </xsl:variable>
                        <xsl:variable name="var7_majuscules">
                            <xsl:call-template name="majuscules">
                                <xsl:with-param name="string" select="substring($var3_PID.5.2, string($var5_constante_value), string($var6_constante_value))"/>
                            </xsl:call-template>
                        </xsl:variable>
                        <xsl:variable name="var4_template_result">
                            <xsl:value-of select="$var7_majuscules"/>
                        </xsl:variable>
                        <xsl:variable name="var9_minuscules">
                            <xsl:call-template name="minuscules">
                                <xsl:with-param name="string" select="$var3_PID.5.2"/>
                            </xsl:call-template>
                        </xsl:variable>
                        <xsl:variable name="var8_template_result">
                            <xsl:value-of select="$var9_minuscules"/>
                        </xsl:variable>
                        <xsl:variable name="var10_constante_value">
                            <xsl:text><![CDATA[2]]></xsl:text>
                        </xsl:variable>
                        <xsl:variable name="var11_constante_value">
                            <xsl:text><![CDATA[1]]></xsl:text>
                        </xsl:variable>
                        <xsl:element name="firstname">
                            <xsl:value-of select="concat($var4_template_result, substring($var8_template_result, string($var10_constante_value), number(string-length($var3_PID.5.2)) - number(string($var11_constante_value))))"/>
                        </xsl:element>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:for-each select="$rootNode/PID">
                    <xsl:variable name="var12_PID" select="."/>
                    <xsl:for-each select="PID.5.1">
                        <xsl:variable name="var13_PID.5.1" select="."/>
                        <xsl:variable name="var14_majuscules">
                            <xsl:call-template name="majuscules">
                                <xsl:with-param name="string" select="$var13_PID.5.1"/>
                            </xsl:call-template>
                        </xsl:variable>
                        <xsl:element name="lastname">
                            <xsl:value-of select="$var14_majuscules"/>
                        </xsl:element>
                    </xsl:for-each>
                </xsl:for-each>
                <xsl:for-each select="$rootNode/PID">
                    <xsl:variable name="var15_PID" select="."/>
                    <xsl:for-each select="PID.3.1">
                        <xsl:variable name="var16_PID.3.1" select="."/>
                        <xsl:element name="id">
                            <xsl:value-of select="concat($Prefix, $var16_PID.3.1)"/>
                        </xsl:element>
                    </xsl:for-each>
                </xsl:for-each>
            </xsl:element>
        </xsl:element>
    </xsl:template>
</xsl:stylesheet>
